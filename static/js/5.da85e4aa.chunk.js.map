{"version":3,"sources":["components/content/pages/contact/Contact.tsx"],"names":["Contact","useState","animateVariant","setAnimateVariant","useEffect","validationSchema","yup","email","required","subject","min","max","message","handleSubmit","resetForm","a","axiosWithConfig","post","setTimeout","Error","container","useRef","Scroll","animateScroll","scrollTo","current","offsetTop","ContactContainer","ref","validateOnChange","initialValues","onSubmit","setSubmitting","values","errors","touched","handleChange","handleBlur","isSubmitting","isValid","FromStyled","Validation","Input","autoComplete","style","border","type","name","onChange","onBlur","value","placeholder","initial","animate","variants","visible","x","opacity","transition","delay","duration","hidden","Textarea","Button","color","backgroundColor","disabled","styled","main","Form","media","tablet","motion","input","div","button","textarea"],"mappings":"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","file":"static/js/5.da85e4aa.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Formik, Form } from 'formik';\nimport * as yup from 'yup';\nimport { motion } from 'framer-motion';\nimport styled from 'styled-components';\nimport Scroll from 'react-scroll';\n\nimport media from '../../../../utils/MediaQueries';\nimport axiosWithConfig from '../../../../utils/axiosWithConfig';\n\nexport interface ContactProps {}\n\nconst Contact: React.SFC<ContactProps> = () => {\n  const [animateVariant, setAnimateVariant] = useState('hidden');\n  useEffect(() => {\n    setAnimateVariant('visible');\n  }, []);\n\n  const validationSchema = yup.object({\n    email: yup.string().email('Invalid email').required('Required'),\n    subject: yup.string().required('Required').min(6, 'Too Short!').max(50, 'Too Long!'),\n    message: yup.string().required('Required').min(6, 'Too Short!').max(500, 'Too Long!'),\n  });\n\n  const handleSubmit = async (\n    email: string,\n    subject: string,\n    message: string,\n    resetForm: () => void,\n  ) => {\n    try {\n      await axiosWithConfig.post('https://portfolio321123.herokuapp.com/email', {\n        email,\n        subject,\n        message,\n      });\n\n      await setAnimateVariant('hidden');\n      await resetForm();\n      await setTimeout(() => {\n        setAnimateVariant('visible');\n      }, 1400);\n    } catch (err) {\n      Error(err);\n    }\n  };\n\n  // Scroll animation\n  const container = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    Scroll.animateScroll.scrollTo(container.current ? container.current.offsetTop - 5 : 0);\n  }, []);\n\n  return (\n    <ContactContainer ref={container}>\n      <Formik\n        validateOnChange\n        validationSchema={validationSchema}\n        initialValues={{\n          email: '',\n          subject: '',\n          message: '',\n        }}\n        onSubmit={async ({ email, subject, message }, { setSubmitting, resetForm }) => {\n          await setSubmitting(true);\n          await handleSubmit(email, subject, message, resetForm);\n          await setSubmitting(false);\n        }}\n      >\n        {({ values, errors, touched, handleChange, handleBlur, isSubmitting, isValid }) => (\n          <FromStyled>\n            {errors.email && touched.email && <Validation>{errors.email}</Validation>}\n            <Input\n              autoComplete=\"off\"\n              style={errors.email && touched.email ? { border: '1px solid #e74c3c' } : {}}\n              type=\"email\"\n              name=\"email\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.email}\n              placeholder=\"Email\"\n              initial=\"hidden\"\n              animate={animateVariant}\n              variants={{\n                visible: { x: 0, opacity: 1, transition: { delay: 0.6, duration: 0.8 } },\n                hidden: { x: 100, opacity: 0, transition: { delay: 0.6, duration: 0.8 } },\n              }}\n            />\n\n            {errors.subject && touched.subject && <Validation>{errors.subject}</Validation>}\n            <Input\n              autoComplete=\"off\"\n              style={errors.subject && touched.subject ? { border: '1px solid #e74c3c' } : {}}\n              type=\"subject\"\n              name=\"subject\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.subject}\n              placeholder=\"Temat\"\n              initial=\"hidden\"\n              animate={animateVariant}\n              variants={{\n                visible: { x: 0, opacity: 1, transition: { delay: 0.4, duration: 0.8 } },\n                hidden: { x: 100, opacity: 0, transition: { delay: 0.4, duration: 0.8 } },\n              }}\n            />\n            {errors.message && touched.message && <Validation>{errors.message}</Validation>}\n            <Textarea\n              style={errors.message && touched.message ? { border: '1px solid #e74c3c' } : {}}\n              name=\"message\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.message}\n              placeholder=\"Wiadomość\"\n              initial=\"hidden\"\n              animate={animateVariant}\n              variants={{\n                visible: { x: 0, opacity: 1, transition: { delay: 0.2, duration: 0.8 } },\n                hidden: { x: 100, opacity: 0, transition: { delay: 0.2, duration: 0.8 } },\n              }}\n            />\n            <Button\n              style={\n                isValid && values.email && values.subject && values.message\n                  ? {\n                      color: 'white',\n                      border: '1px solid #3498db',\n                      backgroundColor: isSubmitting ? '#3498db' : 'transparent',\n                    }\n                  : {}\n              }\n              disabled={isValid && isSubmitting}\n              type=\"submit\"\n              initial=\"hidden\"\n              animate={animateVariant}\n              variants={{\n                visible: { x: 0, opacity: 1, transition: { delay: 0, duration: 0.8 } },\n                hidden: { x: 100, opacity: 0, transition: { delay: 0, duration: 0.8 } },\n              }}\n            >\n              Wyślij\n            </Button>\n          </FromStyled>\n        )}\n      </Formik>\n    </ContactContainer>\n  );\n};\n\nexport default Contact;\n\nconst ContactContainer = styled.main`\n  overflow: hidden;\n`;\nconst FromStyled = styled(Form)`\n  /* background-color: #202020; */\n  width: auto;\n  margin: 10px 5px 5px;\n  display: flex;\n  flex-direction: column;\n\n  ${media.tablet} {\n    margin: 10vh auto 5px;\n    max-width: 500px;\n  }\n`;\nconst Input = styled(motion.input)`\n  background: #181818;\n  height: 30px;\n  color: #3498db;\n  margin: 0 0px 15px 0px;\n\n  border: none;\n  border: 1px solid #3498db;\n  padding: 2px;\n  font-size: 16px;\n  &:focus {\n    outline: none;\n  }\n`;\nconst Validation = styled.div`\n  color: #e74c3c;\n  font-size: 12px;\n  margin: 0 0 5px 0;\n`;\n\nconst Button = styled(motion.button)`\n  background: #181818;\n  color: #6f6f6f;\n  font-size: 20px;\n  border: 1px solid #6f6f6f;\n  margin: 0 0 20px 0;\n`;\nconst Textarea = styled(motion.textarea)`\n  background: #181818;\n  color: #3498db;\n  font-size: 20px;\n  font-family: inherit;\n  font-weight: 400;\n  border: 1px solid #3498db;\n  flex-basis: 200px;\n  resize: none;\n  margin: 0 0px 15px 0px;\n  ${media.tablet} {\n    flex-basis: 300px;\n  }\n`;\n"],"sourceRoot":""}