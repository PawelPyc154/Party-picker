{"version":3,"sources":["components/pages/contact/Contact.tsx"],"names":["Contact","useState","animateVariant","setAnimateVariant","useEffect","validationSchema","yup","email","required","subject","min","max","message","handleSubmit","resetForm","a","axiosWithConfig","post","setTimeout","Error","container","useRef","Scroll","animateScroll","scrollTo","current","offsetTop","ContactContainer","ref","validateOnMount","validateOnChange","initialValues","onSubmit","setSubmitting","values","errors","touched","handleChange","handleBlur","isSubmitting","isValid","FromStyled","Validation","Input","autoComplete","className","type","name","onChange","onBlur","value","placeholder","initial","animate","variants","visible","x","opacity","transition","delay","duration","hidden","Textarea","Button","disabled","styled","main","props","theme","colors","backgroundSecondary","borderPrimary","Form","media","tablet","motion","input","textSecondary","layout","hover","div","error","button","textPrimary","disable","textarea"],"mappings":"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","file":"static/js/7.12d4e6dc.chunk.js","sourcesContent":["import { Form, Formik } from 'formik';\r\nimport { motion } from 'framer-motion';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport Scroll from 'react-scroll';\r\nimport styled from 'styled-components';\r\nimport * as yup from 'yup';\r\nimport axiosWithConfig from '../../../utils/axiosWithConfig';\r\nimport media from '../../../utils/MediaQueries';\r\n\r\nexport interface ContactProps {}\r\n\r\nconst Contact: React.FC<ContactProps> = () => {\r\n  const [animateVariant, setAnimateVariant] = useState('hidden');\r\n  useEffect(() => {\r\n    setAnimateVariant('visible');\r\n  }, []);\r\n\r\n  const validationSchema = yup.object({\r\n    email: yup.string().email('Invalid email').required('Required'),\r\n    subject: yup.string().required('Required').min(6, 'Too Short!').max(50, 'Too Long!'),\r\n    message: yup.string().required('Required').min(6, 'Too Short!').max(500, 'Too Long!'),\r\n  });\r\n\r\n  const handleSubmit = async (\r\n    email: string,\r\n    subject: string,\r\n    message: string,\r\n    resetForm: () => void,\r\n  ) => {\r\n    try {\r\n      await axiosWithConfig.post('/api/contact', {\r\n        email,\r\n        subject,\r\n        message,\r\n      });\r\n\r\n      await setAnimateVariant('hidden');\r\n      await resetForm();\r\n      await setTimeout(() => {\r\n        setAnimateVariant('visible');\r\n      }, 1400);\r\n    } catch (err) {\r\n      Error(err);\r\n    }\r\n  };\r\n\r\n  // Scroll animation\r\n  const container = useRef<HTMLDivElement>(null);\r\n  useEffect(() => {\r\n    Scroll.animateScroll.scrollTo(container.current ? container.current.offsetTop - 5 : 0);\r\n  }, []);\r\n\r\n  return (\r\n    <ContactContainer ref={container}>\r\n      <Formik\r\n        validateOnMount\r\n        validateOnChange\r\n        validationSchema={validationSchema}\r\n        initialValues={{\r\n          email: '',\r\n          subject: '',\r\n          message: '',\r\n        }}\r\n        onSubmit={async ({ email, subject, message }, { setSubmitting, resetForm }) => {\r\n          await setSubmitting(true);\r\n          await handleSubmit(email, subject, message, resetForm);\r\n          await setSubmitting(false);\r\n        }}\r\n      >\r\n        {({ values, errors, touched, handleChange, handleBlur, isSubmitting, isValid }) => (\r\n          <FromStyled>\r\n            {errors.email && touched.email && <Validation>{errors.email}</Validation>}\r\n            <Input\r\n              autoComplete=\"off\"\r\n              className={errors.email && touched.email ? 'errorInput' : ''}\r\n              type=\"email\"\r\n              name=\"email\"\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              value={values.email}\r\n              placeholder=\"Email\"\r\n              initial=\"hidden\"\r\n              animate={animateVariant}\r\n              variants={{\r\n                visible: { x: 0, opacity: 1, transition: { delay: 0.3, duration: 0.2 } },\r\n                hidden: { x: 100, opacity: 0, transition: { delay: 0.3, duration: 0.2 } },\r\n              }}\r\n            />\r\n\r\n            {errors.subject && touched.subject && <Validation>{errors.subject}</Validation>}\r\n            <Input\r\n              autoComplete=\"off\"\r\n              className={errors.subject && touched.subject ? 'errorInput' : ''}\r\n              type=\"subject\"\r\n              name=\"subject\"\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              value={values.subject}\r\n              placeholder=\"Temat\"\r\n              initial=\"hidden\"\r\n              animate={animateVariant}\r\n              variants={{\r\n                visible: { x: 0, opacity: 1, transition: { delay: 0.2, duration: 0.2 } },\r\n                hidden: { x: 100, opacity: 0, transition: { delay: 0.2, duration: 0.2 } },\r\n              }}\r\n            />\r\n            {errors.message && touched.message && <Validation>{errors.message}</Validation>}\r\n            <Textarea\r\n              className={errors.message && touched.message ? 'errorInput' : ''}\r\n              name=\"message\"\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              value={values.message}\r\n              placeholder=\"Wiadomość\"\r\n              initial=\"hidden\"\r\n              animate={animateVariant}\r\n              variants={{\r\n                visible: { x: 0, opacity: 1, transition: { delay: 0.1, duration: 0.2 } },\r\n                hidden: { x: 100, opacity: 0, transition: { delay: 0.1, duration: 0.2 } },\r\n              }}\r\n            />\r\n            <Button\r\n              disabled={isSubmitting || !isValid}\r\n              type=\"submit\"\r\n              initial=\"hidden\"\r\n              animate={animateVariant}\r\n              variants={{\r\n                visible: { x: 0, opacity: 1, transition: { delay: 0, duration: 0.2 } },\r\n                hidden: { x: 100, opacity: 0, transition: { delay: 0, duration: 0.2 } },\r\n              }}\r\n            >\r\n              Wyślij\r\n            </Button>\r\n          </FromStyled>\r\n        )}\r\n      </Formik>\r\n    </ContactContainer>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n\r\nconst ContactContainer = styled.main`\r\n  overflow: hidden;\r\n  background-color: ${(props) => props.theme.colors.backgroundSecondary};\r\n  margin-top: 10px;\r\n  border: 1px solid ${(props) => props.theme.colors.borderPrimary};\r\n`;\r\nconst FromStyled = styled(Form)`\r\n  width: auto;\r\n  margin: 10px 0 5px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 5px;\r\n  ${media.tablet} {\r\n    margin: 10vh auto 5px;\r\n    max-width: 500px;\r\n  }\r\n`;\r\nconst Input = styled(motion.input)`\r\n  background: ${(props) => props.theme.colors.backgroundSecondary};\r\n  height: 35px;\r\n  color: ${(props) => props.theme.colors.textSecondary};\r\n  margin: 0 0px 15px 0px;\r\n  border: none;\r\n  border: 1px solid ${(props) => props.theme.colors.layout};\r\n  padding: 2px;\r\n  font-size: 16px;\r\n  &:hover,\r\n  &:focus {\r\n    outline: none;\r\n    border: 1px solid ${(props) => props.theme.colors.hover};\r\n  }\r\n`;\r\nconst Validation = styled.div`\r\n  color: ${(props) => props.theme.colors.error};\r\n  font-size: 12px;\r\n  margin: 0 0 5px 0;\r\n`;\r\n\r\nconst Button = styled(motion.button)`\r\n  background: ${(props) => props.theme.colors.backgroundSecondary};\r\n  color: ${(props) => props.theme.colors.textPrimary};\r\n  font-size: 20px;\r\n  border: 1px solid ${(props) => props.theme.colors.layout};\r\n  height: 35px;\r\n  width: 20%;\r\n  align-self: flex-end;\r\n  margin: 0 0 50px;\r\n  &:disabled {\r\n    color: ${(props) => props.theme.colors.disable};\r\n    border: 1px solid ${(props) => props.theme.colors.disable};\r\n  }\r\n`;\r\n\r\nconst Textarea = styled(motion.textarea)`\r\n  background: ${(props) => props.theme.colors.backgroundSecondary};\r\n  color: ${(props) => props.theme.colors.layout};\r\n  font-size: 20px;\r\n  font-family: inherit;\r\n  font-weight: 400;\r\n  border: 1px solid ${(props) => props.theme.colors.layout};\r\n  flex-basis: 200px;\r\n  resize: none;\r\n  margin: 0 0px 15px 0px;\r\n  ${media.tablet} {\r\n    flex-basis: 300px;\r\n  }\r\n  &:hover,\r\n  &:focus {\r\n    outline: none;\r\n    border: 1px solid ${(props) => props.theme.colors.hover};\r\n  }\r\n`;\r\n"],"sourceRoot":""}