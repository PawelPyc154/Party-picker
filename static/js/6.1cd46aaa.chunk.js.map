{"version":3,"sources":["components/pages/addEvent/typeOfEvent/TypeOfEvent.tsx","components/pages/addEvent/AddEvent.tsx"],"names":["TypeOfEvent","setFieldValue","typeOfEventChosen","TypeOfEventContainer","EventTypeWrapper","map","typeOfEvent","index","EventType","type","onClick","handleClick","key","style","border","color","initial","variants","visible","x","opacity","transition","delay","duration","hidden","styled","div","motion","button","AddEvent","useState","animationStop","setAnimationStop","useSelector","state","PositionAddEventReducer","longitude","latitude","Date","startDate","setStartDate","serverError","setServerError","history","useHistory","dispatch","useDispatch","container","useRef","useEffect","Scroll","animateScroll","scrollTo","current","offsetTop","setCoordinates","undefined","useFormik","initialValues","name","listFb","describe","validationSchema","yup","required","max","onSubmit","value","a","axiosWithConfig","post","coordinates","date","parse","toString","fbList","getEvents","push","response","data","error","limiter","isSubmitting","errors","touched","handleChange","handleBlur","values","handleSubmit","AddEventContainer","Loading","height","width","FromStyled","animate","ref","H2","Validation","Input","autoComplete","onChange","onBlur","placeholder","Wrapper","Coordinate","WrapperDate","LabelDate","htmlFor","DatePickerStyled","id","selected","showTimeSelect","timeFormat","timeIntervals","timeCaption","dateFormat","locale","pl","withPortal","minDate","Textarea","CheckBoxWrapper","FormControlLabel","control","CheckboxStyled","checked","label","labelPlacement","Button","backgroundColor","disabled","main","h2","form","media","tablet","input","withStyles","root","props","Checkbox","textarea","DatePicker"],"mappings":"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","file":"static/js/6.1cd46aaa.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\n\nexport interface TypeOfEventProps {\n  setFieldValue: (field: string, value: any, shouldValidate?: boolean | undefined) => void;\n  typeOfEventChosen: string;\n}\n\nconst TypeOfEvent: React.SFC<TypeOfEventProps> = ({ setFieldValue, typeOfEventChosen }) => {\n  const typesOfEvent = ['dance', 'picnic'];\n\n  const handleClick = (typeOfEvent: string) => {\n    setFieldValue('typeOfEvent', typeOfEvent);\n  };\n  return (\n    <TypeOfEventContainer>\n      <EventTypeWrapper>\n        {typesOfEvent.map((typeOfEvent, index) => (\n          <EventType\n            type=\"button\"\n            onClick={() => handleClick(typeOfEvent)}\n            key={typeOfEvent}\n            style={\n              typeOfEvent === typeOfEventChosen ? { border: '1px solid white', color: 'white' } : {}\n            }\n            initial=\"hidden\"\n            variants={{\n              visible: {\n                x: 0,\n                opacity: 1,\n                transition: { delay: index * 0.05 + 0.4, duration: 0.2 },\n              },\n              hidden: {\n                x: 100,\n                opacity: 0,\n                transition: { delay: index * 0.05 + 0.4, duration: 0.2 },\n              },\n            }}\n          >\n            {typeOfEvent}\n          </EventType>\n        ))}\n      </EventTypeWrapper>\n    </TypeOfEventContainer>\n  );\n};\n\nexport default TypeOfEvent;\n\nconst TypeOfEventContainer = styled.div`\n  width: 100%;\n`;\n\nconst EventTypeWrapper = styled.div`\n  display: flex;\n  /* justify-content: space-between; */\n  flex-wrap: wrap;\n\n  width: calc(100% + 20px);\n  transform: translateX(-10px);\n`;\nconst EventType = styled(motion.button)`\n  background-color: transparent;\n  border: 1px solid #3498db;\n  border-radius: 0;\n  height: 35px;\n  padding: 5px;\n  color: #3498db;\n  margin: 15px 10px;\n  display: flex;\n  align-items: center;\n  letter-spacing: 1px;\n  cursor: pointer;\n  &:hover {\n    border: 1px solid white;\n    color: white;\n  }\n`;\n","import React, { useState, useRef, useEffect } from 'react';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { motion } from 'framer-motion';\nimport Scroll from 'react-scroll';\nimport styled from 'styled-components';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport 'react-datepicker/dist/react-datepicker-cssmodules.min.css';\nimport pl from 'date-fns/locale/pl'; // the locale you want\nimport { withStyles } from '@material-ui/core';\nimport Checkbox, { CheckboxProps } from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { AppState } from '../../../state/allReducers';\nimport { setCoordinates } from '../../../state/positionAddEvent/action';\nimport axiosWithConfig from '../../../utils/axiosWithConfig';\nimport { getEvents } from '../../../state/events/action';\nimport Loading from '../../universalComponents/Loading';\nimport TypeOfEvent from './typeOfEvent/TypeOfEvent';\nimport media from '../../../utils/MediaQueries';\n\nexport interface AddEventProps {}\n\nconst AddEvent: React.SFC<AddEventProps> = () => {\n  const [animationStop, setAnimationStop] = useState('hidden');\n  const { longitude, latitude } = useSelector((state: AppState) => state.PositionAddEventReducer);\n  const [startDate, setStartDate] = useState(new Date());\n  const [serverError, setServerError] = useState('');\n\n  const history = useHistory();\n\n  const dispatch = useDispatch();\n  const container = useRef<HTMLFormElement>(null);\n  useEffect(() => {\n    // Animation init\n    Scroll.animateScroll.scrollTo(container.current ? container.current.offsetTop - 5 : 0);\n    setAnimationStop('visible');\n    return () => {\n      dispatch(setCoordinates(undefined, undefined));\n    };\n  }, [dispatch]);\n\n  const {\n    isSubmitting,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    values,\n    setFieldValue,\n    handleSubmit,\n  } = useFormik({\n    initialValues: {\n      name: '',\n      listFb: false,\n      typeOfEvent: 'dance',\n      describe: '',\n    },\n    validationSchema: yup.object({\n      name: yup.string().required('Required').max(50, 'Too Long!'),\n      describe: yup.string().max(500, 'Too Long!'),\n      typeOfEvent: yup.string().required('Required'),\n    }),\n    onSubmit: async (value) => {\n      try {\n        await axiosWithConfig.post('/events', {\n          name: value.name,\n          describe: value.describe,\n          coordinates: {\n            longitude,\n            latitude,\n          },\n          date: Date.parse(startDate.toString()),\n          fbList: value.listFb,\n          type: value.typeOfEvent,\n        });\n\n        await dispatch(getEvents());\n        await dispatch(setCoordinates(undefined, undefined));\n        history.push('/');\n      } catch (err) {\n        setServerError(err.response.data.error?.limiter);\n      }\n    },\n  });\n\n  return (\n    <AddEventContainer>\n      {isSubmitting ? (\n        <Loading height={80} width={80} />\n      ) : (\n        <FromStyled onSubmit={handleSubmit} animate={animationStop} ref={container}>\n          <H2> Dodaj wydarzenie</H2>\n          <br />\n          {serverError ? <Validation>{serverError}</Validation> : null}\n          {errors.name && touched.name && <Validation>{errors.name}</Validation>}\n          <Input\n            autoComplete=\"off\"\n            style={errors.name && touched.name ? { border: '1px solid #e74c3c' } : {}}\n            type=\"text\"\n            name=\"name\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            value={values.name}\n            placeholder=\"Nazwa wydarzenia *\"\n            initial=\"hidden\"\n            variants={{\n              visible: { x: 0, opacity: 1, transition: { delay: 0.1, duration: 0.2 } },\n              hidden: { x: 100, opacity: 0, transition: { delay: 0.1, duration: 0.2 } },\n            }}\n          />\n\n          {longitude && latitude ? (\n            <Wrapper>\n              <Coordinate\n                initial=\"hidden\"\n                variants={{\n                  visible: { x: 0, opacity: 1, transition: { delay: 0, duration: 0.2 } },\n                  hidden: { x: 100, opacity: 0, transition: { delay: 0, duration: 0.2 } },\n                }}\n              >\n                {longitude}\n              </Coordinate>\n              <Coordinate\n                initial=\"hidden\"\n                variants={{\n                  visible: { x: 0, opacity: 1, transition: { delay: 0.1, duration: 0.2 } },\n                  hidden: { x: 100, opacity: 0, transition: { delay: 0.1, duration: 0.2 } },\n                }}\n              >\n                {longitude}\n              </Coordinate>\n            </Wrapper>\n          ) : (\n            <Coordinate\n              initial=\"hidden\"\n              variants={{\n                visible: { x: 0, opacity: 1, transition: { delay: 0.2, duration: 0.2 } },\n                hidden: { x: 100, opacity: 0, transition: { delay: 0.2, duration: 0.2 } },\n              }}\n            >\n              kliknij w mapę aby pobrać współrzędne geograficzne\n            </Coordinate>\n          )}\n\n          {/* Data początku * */}\n\n          <WrapperDate\n            initial=\"hidden\"\n            variants={{\n              visible: { x: 0, opacity: 1, transition: { delay: 0.3, duration: 0.2 } },\n              hidden: { x: 100, opacity: 0, transition: { delay: 0.3, duration: 0.2 } },\n            }}\n          >\n            <LabelDate htmlFor=\"DatePicker\">Data początku:</LabelDate>\n\n            <DatePickerStyled\n              id=\"DatePicker\"\n              selected={startDate}\n              onChange={(date: Date) => setStartDate(date)}\n              showTimeSelect\n              timeFormat=\"p\"\n              timeIntervals={15}\n              timeCaption=\"time\"\n              dateFormat=\"p MMMM d, yyyy\"\n              locale={pl}\n              withPortal\n              minDate={new Date()}\n            />\n          </WrapperDate>\n\n          {errors.typeOfEvent && touched.typeOfEvent && (\n            <Validation>{errors.typeOfEvent}</Validation>\n          )}\n          <TypeOfEvent setFieldValue={setFieldValue} typeOfEventChosen={values.typeOfEvent} />\n\n          {errors.describe && touched.describe && <Validation>{errors.describe}</Validation>}\n          <Textarea\n            style={errors.describe && touched.describe ? { border: '1px solid #e74c3c' } : {}}\n            name=\"describe\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            value={values.describe}\n            placeholder=\"Opis wydarzenia\"\n            initial=\"hidden\"\n            animate={animationStop}\n            variants={{\n              visible: { x: 0, opacity: 1, transition: { delay: 0.5, duration: 0.2 } },\n              hidden: { x: 100, opacity: 0, transition: { delay: 0.5, duration: 0.2 } },\n            }}\n          />\n\n          <CheckBoxWrapper\n            initial=\"hidden\"\n            variants={{\n              visible: { x: 0, opacity: 1, transition: { delay: 0.6, duration: 0.2 } },\n              hidden: { x: 100, opacity: 0, transition: { delay: 0.6, duration: 0.2 } },\n            }}\n          >\n            <FormControlLabel\n              control={\n                <CheckboxStyled checked={values.listFb} onChange={handleChange} name=\"listFb\" />\n              }\n              label=\"Lista FB\"\n              labelPlacement=\"start\"\n            />\n          </CheckBoxWrapper>\n\n          <Button\n            style={\n              values.name && longitude && latitude && values.typeOfEvent\n                ? {\n                    color: 'white',\n                    border: '1px solid #3498db',\n                    backgroundColor: isSubmitting ? '#3498db' : 'transparent',\n                  }\n                : {}\n            }\n            disabled={\n              isSubmitting || !values.name || !longitude || !latitude || !values.typeOfEvent\n            }\n            type=\"submit\"\n            initial=\"hidden\"\n            variants={{\n              visible: { x: 0, opacity: 1, transition: { delay: 0.7, duration: 0.2 } },\n              hidden: { x: 100, opacity: 0, transition: { delay: 0.7, duration: 0.2 } },\n            }}\n          >\n            Wyślij\n          </Button>\n        </FromStyled>\n      )}\n    </AddEventContainer>\n  );\n};\n\nexport default AddEvent;\n\nconst AddEventContainer = styled.main`\n  overflow: hidden;\n  background-color: #202020;\n  margin-top: 10px;\n  border: 1px solid #313131;\n`;\nconst H2 = styled(motion.h2)`\n  margin: 10px auto;\n`;\n\nconst FromStyled = styled(motion.form)`\n  width: 100%;\n  margin: 10px 0 5px;\n  display: flex;\n  flex-direction: column;\n  padding: 5px;\n  ${media.tablet} {\n    margin: 40px auto 5px;\n    max-width: 600px;\n  }\n`;\nconst Input = styled(motion.input)`\n  background: #181818;\n  height: 35px;\n  color: #3498db;\n  margin: 0 0px 15px 0px;\n  border: none;\n  border: 1px solid #3498db;\n  padding: 2px;\n  font-size: 16px;\n  width: 100%;\n\n  &:disabled {\n    border: 1px solid #667575;\n  }\n  &:focus {\n    outline: none;\n  }\n`;\nconst Validation = styled(motion.div)`\n  color: #e74c3c;\n  font-size: 12px;\n  margin: 0 0 5px 0;\n`;\nconst CheckBoxWrapper = styled(motion.div)`\n  align-self: flex-end;\n  margin: 10px 0;\n`;\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  ${media.tablet} {\n    grid-template-columns: repeat(2, 1fr);\n    grid-gap: 0 10px;\n  }\n`;\nconst WrapperDate = styled(motion.div)`\n  display: grid;\n  grid-template-columns: 109px 1fr;\n`;\nconst LabelDate = styled.label`\n  background: #181818;\n  height: 35px;\n  color: #3498db;\n  margin: 0 0px 0px 0px;\n  border: none;\n  border: 1px solid #3498db;\n  border-right: none;\n  padding: 2px;\n  font-size: 16px;\n  display: flex;\n  align-items: center;\n  padding: 0 5px;\n  cursor: text;\n`;\n\nconst Coordinate = styled(motion.div)`\n  background: #202020;\n  height: 35px;\n  color: #3498db;\n  margin: 0 0px 15px 0px;\n  border: none;\n  border: 1px solid #667575;\n  padding: 2px;\n  font-size: 16px;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0 5px;\n`;\n\nconst CheckboxStyled = withStyles({\n  root: {\n    color: '#3498db',\n    '&$checked': {\n      color: 'white',\n    },\n  },\n  checked: {},\n})((props: CheckboxProps) => <Checkbox color=\"default\" {...props} />);\n\nconst Button = styled(motion.button)`\n  background: #181818;\n  color: #6f6f6f;\n  font-size: 20px;\n  border: 1px solid #6f6f6f;\n  height: 35px;\n  width: 20%;\n  align-self: flex-end;\n  margin-bottom: 50px;\n`;\n\nconst Textarea = styled(motion.textarea)`\n  background: #181818;\n  color: #3498db;\n  font-size: 20px;\n  font-family: inherit;\n  font-weight: 400;\n  border: 1px solid #3498db;\n  flex-basis: 100px;\n  resize: none;\n\n  ${media.tablet} {\n    flex-basis: 100px;\n  }\n`;\nconst DatePickerStyled = styled(DatePicker)`\n  background: #181818;\n  height: 35px;\n  color: #3498db;\n  margin: 0 0px 0px 0px;\n  border: none;\n  border: 1px solid #3498db;\n  border-left: none;\n  padding: 2px;\n  font-size: 16px;\n  width: 100%;\n`;\n"],"sourceRoot":""}